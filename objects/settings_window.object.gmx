<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -5;
instance_create(690, 390, back_button);
instance_create(580, 390, cards_removed_button);
instance_create(470, 390, save_button);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
if (mouse_check_button_released(mb_left) &amp;&amp; point_in_rectangle(mouse_x, mouse_y, 665, 0, 755, 399) &amp;&amp; !instance_exists(cards_used_window)) {
    var function = mouse_y div 50;
    if (function &gt;= 4 &amp;&amp; !dealer.purchases[0]) {
        iap_acquire("bjcalc_full_version", "");
        exit;
        }
    switch (function) {
        case 0: dealer.hit_on++; break;
        case 1: dealer.hit_on--; break;
        case 2: dealer.hit_on_soft++; break;
        case 3: dealer.hit_on_soft--; break;
        case 4: {
            dealer.number_of_decks++;
            if (dealer.number_of_decks &lt;= 10) {
                for (i=0; i&lt;=10; i++) {
                    dealer.cards_removed[i] = 0
                    }
                calculate_cards_left();
                }
            break;
            }
        case 5: {
            dealer.number_of_decks--;
            if (dealer.number_of_decks &gt;= 0) {
                for (i=0; i&lt;=10; i++) {
                    dealer.cards_removed[i] = 0
                    }
                calculate_cards_left();
                }
            break;
            }
        case 6: {
            dealer.number_of_players++;
            if (dealer.first_card != -1) {
                dealer.dealready = true;
                dealer.dealing_to = 1;
                }
            break;
            }
        case 7: {
            dealer.number_of_players--;
            if (dealer.number_of_players != 0) {
                with (player_num(dealer.number_of_players+1)) {
                    for (i=0; i&lt;9; i++) {
                        hand[i] = -1;
                        }
                    for (i=0; i&lt;=10; i++) {
                        count[i] = 0;
                        }
                    card_total(0);
                    }
                }
            break;
            }
        }
    dealer.hit_on = clamp(dealer.hit_on, 11, 20);
    dealer.hit_on_soft = clamp(dealer.hit_on_soft, dealer.hit_on, 20);
    dealer.number_of_decks = clamp(dealer.number_of_decks, 1, 10);
    dealer.number_of_players = clamp(dealer.number_of_players, 1, 5);
    save_settings();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_rectangle_colour(0,0,800,450,c_gray,c_gray,c_gray,c_gray,false);

draw_set_font(text_font);
draw_set_halign(fa_left);
draw_set_valign(fa_center);
draw_text(100, 50, "Dealer Hits On:")
draw_text(100, 150, "Dealer Hits On Soft:")
draw_text(100, 250, "Number Of Decks:")
draw_text(100, 350, "Number Of Players:")

draw_set_font(digital);
draw_set_halign(fa_right);
draw_text(650, 50, dealer.hit_on);
draw_text(650, 150, dealer.hit_on_soft);
draw_text(650, 250, dealer.number_of_decks);
draw_text(650, 350, dealer.number_of_players);

var i;
for (i=0; i&lt;if2(dealer.purchases[0], 400, 200); i+=100) {
    draw_triangle_colour(670, 45+i, 750, 45+i, 710, 15+i, c_black, c_black, c_black, false);
    draw_triangle_colour(670, 55+i, 750, 55+i, 710, 85+i, c_black, c_black, c_black, false);
    }
if (!dealer.purchases[0]) {
    draw_roundrect_custom(670, 220, 750, 280, 10, c_black, c_white, 3);
    draw_roundrect_custom(670, 320, 750, 380, 10, c_black, c_white, 3);
    draw_set_font(card_font);
    draw_set_halign(fa_center);
    draw_text(710, 250, "UNLOCK#FOR#$"+string(dealer.price[0]));
    draw_text(710, 350, "UNLOCK#FOR#$"+string(dealer.price[0]));
    }
// argument0 = x1
// argument1 = y1
// argument2 = x2
// argument3 = y2
// argument4 = radius
// argument5 = outer color
// argument6 = inner color
// argument7 = outline thickness
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
