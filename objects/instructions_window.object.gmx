<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var heading_fixed;

depth = -5;
instance_create(690, 10, back_button);
ini_open("BlackjackCalculator.ini");
heading_string = ini_read_string("stats", "headings", "No Internet Connection");

var i = 0;
headings[0] = "";
while (heading_string != "") {
    if (string_char_at(heading_string, 1) != "|") {
        headings[i] += string_char_at(heading_string, 1);
        }
    else {
        i++;
        headings[i] = "";
        }
    heading_string = string_delete(heading_string, 1, 1);
    }
    
for (i=0; i&lt;array_length_1d(headings); i++) {
    heading_fixed = string_replace_all(headings[i]," ", "_") + "_text";
    textdrawn[i]= ini_read_string("stats", heading_fixed, "This app stores the instructions on the internet so they can be easily edited. You will have to open the app at least once while you have an internet connection. Once you do that, the instructions will be accessible whenever you open the app in the future, even if you don't have an internet connection then.");
    textdrawn[i] = string_replace_all(textdrawn[i], "|", "##");
    }
    
scroll_value = 0;
scroll_max = 100;
mouse_start = 0;
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_check_button_pressed(mb_left)) {
    mouse_start = scroll_value + mouse_y;
    }
if (mouse_check_button(mb_left)) {
    scroll_value = clamp(mouse_start - mouse_y, 0, scroll_max);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, current_position, paragraph_spacing, line_spacing, indent1, indent2;
draw_rectangle_colour(0,0,800,450,c_gray,c_gray,c_gray,c_gray,false);
draw_set_font(text_font);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
current_position = 25 - scroll_value;
paragraph_spacing = 25;
indent1 = 25;
indent2 = 50;
line_spacing = 17;
draw_text_transformed(indent1, current_position, "Instructions", 1.5, 1.5, 0)
current_position += 1.5*string_height("Instructions") + paragraph_spacing;
for (i=0; i&lt;array_length_1d(headings); i++) {
    draw_set_font(text_font);
    draw_text(indent1, current_position, headings[i]);
    current_position += string_height(headings[i]) + paragraph_spacing;
    draw_set_font(card_font);
    draw_text_ext(indent2, current_position, textdrawn[i], line_spacing, 800 - 2*indent2);
    current_position += string_height_ext(textdrawn[i], line_spacing, 800 - 2*indent2) + paragraph_spacing;
    }
scroll_max = max(current_position + scroll_value - 450, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
