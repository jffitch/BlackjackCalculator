<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>tenblock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=41;
image_yscale=27;
depth = -3;
value_target = -1;
calculate_cards_left();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dealer.click_ready) {
    exit;
    }

value_target = -1;
if (point_in_rectangle(mouse_x, mouse_y, x+5, y+5, x+404, y+205)) {
    value_target = ((mouse_x - x - 5) div 80) + 1;
    if (mouse_y &lt; y+100) {
        value_target += 5;
        }
    }
if (point_in_rectangle(mouse_x, mouse_y, x+5, y+205, x+200, y+265)) {
    value_target = 0;
    }
if (point_in_rectangle(mouse_x, mouse_y, x+210, y+205, x+405, y+265)) {
    value_target = -2;
    }
    
if (mouse_check_button_released(mb_left) &amp;&amp; value_target != -1 &amp;&amp; (player_target != 0 || value_target != -2) &amp;&amp; (player_target == 0 || value_target != -2 || (player_num(player_target)).hand[2] != -1)) {
    switch (value_target) {
        case 0: break;
        case -2: remove_card(player_target, card_target); break;
        default: {
            if (player_target == 0){
                dealer.first_card = value_target;
                }
            else {
                with (player_num(player_target)) {
                    hand[other.card_target] = other.value_target;
                    count[other.value_target]++;
                    card_total(0);
                    }
                }
            break;
            }
        }
    dealer.click_ready = false;
    dealer.alarm[0] = 3;
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_roundrect_custom(x, y, x+10*image_xscale, y+10*image_yscale, 5, c_black, c_white, 3);
var i;
for (i=1; i&lt;=10; i++) {
    draw_card(i-1, i);
    }
draw_roundrect_custom(x+5, y+215, x+200, y+265, 5, c_black, c_white, 5);
draw_roundrect_custom(x+210, y+215, x+405, y+265, 5, c_black, c_white, 5);

draw_set_font(text_font);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_text(x+102, y+240, "BACK");
draw_text(x+308, y+240, "REMOVE");
    
/*
draw_set_font(card_font);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

draw_text(550, 25, "Mouse Position: ("+string(mouse_x)+", "+string(mouse_y)+")");
switch (value_target) {
    case -1: draw_text(550, 50, "Mouse Not On Button"); break;
    case 0: draw_text(550, 50, "Mouse On Back Button"); break;
    case -2: draw_text(550, 50, "Mouse On Remove Button"); break;
    case 1: draw_text(550, 50, "Mouse On Ace Button"); break;
    case 10: draw_text(550, 50, "Mouse On 10, J, Q, K Button"); break;
    default: draw_text(550, 50, "Mouse On "+ string(value_target) +" Button"); break;
    }
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
