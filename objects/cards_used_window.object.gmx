<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -7;
calculate_cards_left();

indent1 = 50;
indent2 = 255;
indent3 = 450;
indent4 = 655;

triangle_placement = 50;
triangle_space = 3;
triangle_height = 25;
triangle_width = 50;

old_mouse_x = mouse_x;
old_mouse_y = mouse_y;
held_time = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>held_time = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var function = 0;
if (point_in_rectangle(mouse_x, mouse_y, indent2 + triangle_placement, 55, indent2 + triangle_placement + triangle_width, 354)) {
    function = (mouse_y + 5) div 30;
    }
if (point_in_rectangle(mouse_x, mouse_y, indent4 + triangle_placement, 55, indent4 + triangle_placement + triangle_width, 354)) {
    function = ((mouse_y + 5) div 30) + 10;
    }
var max_cards  = if2(function div 2 == 10, 16, 4) * dealer.number_of_decks;
if (function != 0) {
    if (function mod 2 == 0) {
        dealer.cards_removed[function div 2] = min(dealer.cards_removed[function div 2] + 1, max_cards);
        }
    else {
        dealer.cards_removed[function div 2] = max(dealer.cards_removed[function div 2] - 1, 0);;
        }
    calculate_cards_left();
    save_settings();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var held;
held = false;
if (mouse_x != old_mouse_x || mouse_y != old_mouse_y) {
    held_time = 0;
    old_mouse_x = mouse_x;
    old_mouse_y = mouse_y;
    }
else {
    held_time++;
    }
if (held_time &gt; dealer.hold_time &amp;&amp; held_time mod dealer.hold_speed == 0) {
    held = true;
    }
if (held) {
    event_perform(ev_mouse, ev_global_left_press)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_rectangle_colour(0,0,800,450,c_gray,c_gray,c_gray,c_gray,false);

var max_cards  = 4 * dealer.number_of_decks;

draw_set_font(text_font);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_text(400, 25, "Enter amount of each number removed from deck.")
draw_set_halign(fa_left);
draw_text(indent1, 85, "Aces:");
draw_text(indent1, 145, "2s:");
draw_text(indent1, 205, "3s:");
draw_text(indent1, 265, "4s:");
draw_text(indent1, 325, "5s:");
draw_text(indent3, 85, "6s:");
draw_text(indent3, 145, "7s:");
draw_text(indent3, 205, "8s:");
draw_text(indent3, 265, "9s:");
draw_text(indent3, 325, "10/J/Q/Ks:");
draw_text(indent2, 85, "/"+string(max_cards));
draw_text(indent2, 145, "/"+string(max_cards));
draw_text(indent2, 205, "/"+string(max_cards));
draw_text(indent2, 265, "/"+string(max_cards));
draw_text(indent2, 325, "/"+string(max_cards));
draw_text(indent4, 85, "/"+string(max_cards));
draw_text(indent4, 145, "/"+string(max_cards));
draw_text(indent4, 205, "/"+string(max_cards));
draw_text(indent4, 265, "/"+string(max_cards));
draw_text(indent4, 325, "/"+string(max_cards * 4));

draw_set_font(digital);
draw_set_halign(fa_right);
for (i=1; i&lt;=5; i++) {
    draw_text(indent2, 25 + 60 * i, string(max_cards - dealer.cards_left[i]));
    }
for (i=6; i&lt;=9; i++) {
    draw_text(indent4, -275 + 60 * i, string(max_cards - dealer.cards_left[i]));
    }
draw_text(indent4, -275 + 60 * i, string(max_cards * 4 - dealer.cards_left[10]));

var i;
for (i=85; i&lt;=325; i+=60) {
    draw_triangle_colour(indent2 + triangle_placement, i - triangle_space, indent2 + triangle_placement + triangle_width / 2, i - triangle_space - triangle_height, indent2 + triangle_placement + triangle_width, i - triangle_space, c_black, c_black, c_black, false);
    draw_triangle_colour(indent2 + triangle_placement, i + triangle_space, indent2 + triangle_placement + triangle_width / 2, i + triangle_space + triangle_height, indent2 + triangle_placement + triangle_width, i + triangle_space, c_black, c_black, c_black, false);
    draw_triangle_colour(indent4 + triangle_placement, i - triangle_space, indent4 + triangle_placement + triangle_width / 2, i - triangle_space - triangle_height, indent4 + triangle_placement + triangle_width, i - triangle_space, c_black, c_black, c_black, false);
    draw_triangle_colour(indent4 + triangle_placement, i + triangle_space, indent4 + triangle_placement + triangle_width / 2, i + triangle_space + triangle_height, indent4 + triangle_placement + triangle_width, i + triangle_space, c_black, c_black, c_black, false);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
