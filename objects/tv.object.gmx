<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>tenblock_topright</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -2;
image_xscale = 27.5;
image_yscale = 23;

ad_file = noone;
ad_file_loaded = false;
if (file_exists("BlackjackCalculator.ini")) {
    ad_file_loaded = true;
    }

if (os_is_network_connected()) {
    ad_file = http_get_file("http://mathgeniusguide.com/BlackjackCalculator.ini", "BlackjackCalculator.ini");
    }
ad_image = ad_start;
ad_link = "http://mathgeniusguide.com";
ad_text = "Like this app? For more apps by J. F. Fitch, go to MathGeniusGuide.com";
ad_time = 300;

alarm[0] = 1;
chosen_ad = 0;
new_ad_image = 0;
textscale = 1;

click_ready = false;
get_ad_countdown = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>click_ready = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(back_button)) {
    exit;
    }
var ad_weight, total_weight, number_of_ads, image_url;
if (file_exists("BlackjackCalculator.ini") &amp;&amp; !dealer.purchases[0]) {
    ini_open("BlackjackCalculator.ini");
    total_weight = 0;
    number_of_ads = ini_read_real("stats", "number_of_ads", 0);
    for (chosen_ad=1; chosen_ad&lt;=number_of_ads; chosen_ad++) {
        ad_weight[chosen_ad] = if2(date_in_range(),ini_read_real("ad"+string(chosen_ad), "weight", 1),0);
        total_weight += ad_weight[chosen_ad]
        }
    total_weight *= random(1);
    for (chosen_ad=1; total_weight&gt;0; chosen_ad++) {
        total_weight -= ad_weight[chosen_ad];
        }
    chosen_ad--;
    
    image_url = ini_read_string("ad"+string(chosen_ad), "image", "http://mathgeniusguide.com/HTBAMG shirt design.png")
    new_ad_image = sprite_add(image_url, 1, false, false, 0, 0);
    new_ad_link = ini_read_string("ad"+string(chosen_ad), "link", "http://mathgeniusguide.com");
    new_ad_text = ini_read_string("ad"+string(chosen_ad), "text", "Like this app? For more apps by J. F. Fitch, go to MathGeniusGuide.com");
    new_ad_text = string_replace_all(new_ad_text, "|", "#");
    new_textscale = ini_read_real("ad"+string(chosen_ad), "scale", 1);
    ad_time = ini_read_real("stats", "ad_time", 10) * 30;
    ini_close();
    }
if (os_is_network_connected()) {
    get_ad_countdown--;
    if (get_ad_countdown &lt;= 0) {
        ad_file = http_get_file("http://mathgeniusguide.com/BlackjackCalculator.ini", "BlackjackCalculator.ini");
        get_ad_countdown = 120;
        }
    }
alarm[0] = ad_time;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(ord('Q'))) {
    get_ad_countdown = 1;
    alarm[0] = 1;
    }
if (mouse_check_button_pressed(mb_left)) {
    if (screen_open() &amp;&amp; !dealer.purchases[0] &amp;&amp; mouse_over_object()) {
        alarm[1] = 30;
        click_ready = true;
        }
    else {
        click_ready = false;
        }
    }
if (mouse_check_button_released(mb_left) &amp;&amp; click_ready &amp;&amp; mouse_over_object()) {
    url_open(ad_link);
    dealer.click_ready = false;
    dealer.alarm[0] = 3;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var purchase_temp;
if (ds_map_find_value(async_load, "id") == ad_file) {
    if (ds_map_find_value(async_load, "status") == 0) {
        ini_open("BlackjackCalculator.ini");
        purchase_temp = ini_read_real("iap", "automatic", -1);
        if (purchase_temp == 0 || purchase_temp == 1 || dealer.purchase_ready) {
            dealer.purchases[0] = purchase_temp;
            }
        dealer.purchasable = ini_read_real("iap", "purchasable", 1);
        dealer.consume_code = ini_read_real("iap", "consume_code", 0);
        dealer.hold_time = ini_read_real("stats", "hold_time", 15);
        dealer.hold_speed = ini_read_real("stats", "hold_speed", 5);
        dealer.price[0] = ini_read_real("iap", "price", 2.99);
        ini_close();
        ad_file_loaded = true;
        load_settings();
        if (dealer.purchases[0] != 1) {
            for (i=0; i&lt;=10; i++) {
                cards_removed[i] = 0;
                }
            number_of_players = 1;
            number_of_decks = 1;
            }
        calculate_cards_left();
        
        if (dealer.purchases[0] != 0 &amp;&amp; dealer.purchases[0] != 1) {
            dealer.purchases[0] = 0;
            dealer.purchase_ready = false;
            iap_initialize();
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_map_find_value(async_load, "id") == new_ad_image) {
    if (ds_map_find_value(async_load, "status") &gt;= 0) {
        if (ad_image != ad_start) {
            sprite_delete(ad_image);
            }
        ad_image = new_ad_image;
        ad_text = new_ad_text;
        ad_link = new_ad_link;
        sprite_set_offset(ad_image, sprite_get_width(ad_image) / 2, 0);
        textscale = new_textscale;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dealer.purchases[0]) {
    exit;
    }
draw_roundrect_custom(x-image_xscale*10, y, x, y+image_yscale*10, 8, c_black, make_colour_rgb(128,128,128), 8);

draw_set_font(card_font);
draw_set_halign(fa_center);
draw_set_valign(fa_bottom);

draw_sprite_fit(ad_image, 0, x-image_xscale*5, y+10, image_xscale*10-20, image_yscale*10-string_height_ext(ad_text, 16, (image_xscale*10-20)/textscale)*textscale - 15, 1);
draw_text_ext_transformed(x-image_xscale*5, y+image_yscale*10-10, ad_text, 16, (image_xscale*10-20) / textscale, textscale, textscale, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
